# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
*/*
                    - name: CORS Check
  # You may pin to the exact commit or the version.
  # uses: Qiming-Liu/cors-check-action@6b049875398aeb702d255825369de78e3cff656f
  uses: Qiming-Liu/cors-check-action@v4
  with:
    # Target URL(s), split by |
    url: 
    # HTTP method to use
    method: # optional, default is GET
    # Expect the check to fail (e.g. 4XX, 5XX status code)
    expect-failure: # optional, default is false
    # Number of unsuccessful attempts to call URL before giving up
    max-attempts: # optional, default is 1
    # Time between attempts (e.g. 3s, 1m)
    retry-delay: # optional, default is 3s
    # Follow redirected location in case request resulted in 3XX status code
    follow-redirect: # optional, default is true
    # String representation of cookie attached to health check request.
Format: `Name=Value`

    cookie: # optional, default is 
    # Basic auth login password pair.
Format: `login:password`

    basic-auth: # optional, default is 
    # String that must be present in the body at the target URL.

    contains: # optional, default is 
    # String that must not be present in the body at the target URL.

    contains-not: # optional, default is 
    # Retry with exponential backoff (true) or at regular intervals (false).
    exponential-backoff: # optional, default is false
          
